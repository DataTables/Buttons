<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="1">

<css lib="datatables buttons"/>
<js lib="jquery datatables buttons jszip pdfmake vfsfonts buttons-html5 buttons-print">
<![CDATA[

$('#example').DataTable({
	layout: {
		topStart: {
			buttons: ['copy', 'csv', 'excel', 'pdf', 'print']
		}
	}
});

]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	layout: {
		topStart: {
			buttons: ['copy', 'csv', 'excel', 'pdf', 'print']
		}
	}
});

]]>
</js-vanilla>

<title lib="Buttons">Initialisation: Basic</title>

<info><![CDATA[

The most common usage of Buttons, and that which will be used in the majority of these examples, is to place the buttons around the table using the `-init layout` option of DataTables. Buttons creates the `-feature buttons` feature that can be used with `-init layout`, just as the DataTables defaults features of `info`, `paging` and others are.

The Buttons feature can take either an array of buttons, or a `-init buttons` configuration object. Each button can also be [extended](custom.html) to provide customisation of that button.

This example shows the `b-button copy`, `b-button csv`, `b-button excel`, `b-button pdf` and `b-button print` buttons being used to display data export options for the DataTable.

]]></info>

</dt-example>
