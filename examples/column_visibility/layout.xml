<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="2">

<css lib="datatables buttons" />
<js lib="jquery datatables buttons buttons-colvis">
<![CDATA[

$('#example').DataTable({
	layout: {
		topStart: {
			buttons: [
				{
					extend: 'colvis',
					collectionLayout: 'fixed columns',
					popoverTitle: 'Column visibility control'
				}
			]
		}
	}
});

]]>
</js>

<js-vanilla>
<![CDATA[

new DataTable('#example', {
	layout: {
		topStart: {
			buttons: [
				{
					extend: 'colvis',
					collectionLayout: 'fixed columns',
					popoverTitle: 'Column visibility control'
				}
			]
		}
	}
});

]]>
</js-vanilla>

<title lib="Buttons">Multi-column layout</title>

<info><![CDATA[

The `b-button collection` button has a `collectionLayout` option that can be used to control the layout of the buttons shown in the collection. As the `b-button colvis` button extends the collection button, this option is also available for the column visibility controls.

This example shows a fixed, automatic column layout. Please see the `collectionLayout` option in the `b-button collection` button documentation for the full list of options.

]]></info>

</dt-example>
