<?xml version="1.0" encoding="UTF-8" ?>
<dt-button library="Buttons">
	<name>excel</name>
	<summary>Create and save an Excel CSV file that contains the data from the table</summary>
	<since>1.0.0</since>

	<requires>
		* Buttons' _HTML5 export button_ plug-in (`-button excelHtml5`)

		To ensure that all files required for Excel export are included, the [DataTables download builder](/download) is recommend.
	</requires>

	<description>
		This button type serves as a proxy that will automatically detect if the `b-button excelHtml5` button can be used based on the browser's capabilities and the libraries available on the page.

		This is provided as an option since the HTML5 button type requires a reasonably modern browser which may not always be available to the end user.

		If the requirements of the `b-button excelHtml5` button are not satisfied, no button will be presented to the end user. For the requirements of each button type, please refer to its own documentation.


		### Styling and customisation

		For information on how you can customise the created XLSX file, please refer to the _Customisation_ section in the `b-button excelHtml5` button documentation.
	</description>


	<option type="string" name="text" default="Excel">
		The button's display text. The text can be configured using this option (see `b-init buttons.buttons.text`) or the `buttons.copy` option of the DataTables `dt-init language` object.
	</option>

	<option type="string" name="className" default="buttons-excel">
		The button's class name. See `b-init buttons.buttons.className` for details.
	</option>

	<option type="function" name="action">
		Create and save a Excel file.
	</option>

	<option type="object" name="exportOptions" default="{}">
		Select the data to be gathered from the DataTable for export. This includes options for which columns, rows, ordering and search. Please see the `b-api buttons.exportData()` method for full details - the object given by this parameter is passed directly into that action to gather the required data.
	</option>

	<option type="boolean" name="header" default="true">
		Indicate if the table header should be included in the exported data or not.
	</option>

	<option type="boolean" name="footer" default="false">
		Indicate if the table footer should be included in the exported data or not.
	</option>

	<option type="string|function" name="filename" default="*">
		File name to give the created file (plus the extension defined by the `extension` option). The special character `*` is automatically replaced with the value read from the host document's `-tag title` tag.
	</option>

	<option type="string" name="extension" default=".xlsx">
		The extension to give the created file name.
	</option>

	<option type="string" name="sheetName" default="Sheet1">
		Name for the worksheet in Excel file created. The characters [] \ /: *? : are not allowed and will be removed if present.
	</option>

	<option type="boolean" name="createEmptyCells" default="false" since="1.5.0">
		Option to instruct the Excel export to create empty cells. By default if a cell contains `null` or empty data, it will not be created in the exported spreadsheet. You may however wish for it to do so, based on styling requirements.
	</option>

	<option type="function" name="customize" default="undefined" since="1.2.0">
		This method can be used to modify the XSLX file that is created by Buttons. The first parameter that is passed in is an object that contains the XML files and the object structure matches the file system paths for those files in an XSLX file. Customisation of the XSLX file is a complex topic - please refer to the _Customisation_ section in the `b-button excelHtml5` button documentation for full details.

		As of Buttons 1.5.2 this function is passed three parameters:

		1. An object that contains the XML files in the ZIP file structure used by Excel
		2. The button configuration object
		3. A DataTables API instance for the table the button belongs to.
	</option>

	<option type="string|function" name="title" default="*" since="1.4.0">
		Title of the table that will be included in the exported data. Please see `-api buttons.exportInfo()` for all options relating to this parameter.
	</option>

	<option type="string|function" name="messageTop" default="*" since="1.4.0">
		Message to be shown at the top of the table, or the `-tag caption` tag if displayed at the top of the table.
	</option>

	<option type="string|function" name="messageBottom" default="*" since="1.4.0">
		Message to be shown at the bottom of the table, or the `-tag caption` tag if displayed at the bottom of the table.
	</option>


	<example title="DataTables initialisation: Use the `b-button excel` button type to automatically alias the HTML button options."><![CDATA[

$('#myTable').DataTable( {
	buttons: [
		'excel'
	]
} );

]]></example>

	<example title="DataTables initialisation: Use the `exportOptions` to save only the data shown on the current DataTable page"><![CDATA[

$('#myTable').DataTable( {
	buttons: [
		{
			extend: 'excel',
			text: 'Save current page',
			exportOptions: {
				modifier: {
					page: 'current'
				}
			}
		}
	]
} );

]]></example>
</dt-button>